/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */

class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode* tmp = headA;
        int diff = 0;
        int cntA = 0, cntB = 0;
        while(tmp != NULL){
            cntA++;
            tmp = tmp->next;
        }
        tmp = headB;
        while(tmp != NULL){
            cntB++;
            tmp = tmp->next;
        }
        diff = abs(cntA - cntB);
        if(cntA > cntB){
            while(diff > 0){
                headA = headA->next;
                diff--;
            }
        }else{
            while(diff > 0){
                headB = headB->next;
                diff--;
            }
        }
        while(headA != NULL && headB != NULL){
            if(headA == headB){
                return headA;
            }
            headA = headA->next;
            headB = headB->next;
        }
        return NULL;
        
    }
};
